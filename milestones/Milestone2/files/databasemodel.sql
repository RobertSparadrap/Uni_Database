-- MySQL Script generated by MySQL Workbench
-- Wed Nov  9 13:06:57 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema CollegeDepartmentDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema CollegeDepartmentDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `CollegeDepartmentDB` DEFAULT CHARACTER SET utf8 ;
USE `CollegeDepartmentDB` ;

-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Payroll`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Payroll` (
  `payroll_id` INT NOT NULL,
  `salary` INT NOT NULL,
  PRIMARY KEY (`payroll_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Employee` (
  `employee_id` INT NOT NULL,
  `Payroll_payroll_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`employee_id`),
  INDEX `fk_Employee_Payroll1_idx` (`Payroll_payroll_id` ASC),
  CONSTRAINT `fk_Employee_Payroll1`
    FOREIGN KEY (`Payroll_payroll_id`)
    REFERENCES `CollegeDepartmentDB`.`Payroll` (`payroll_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`FacultyMember`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`FacultyMember` (
  `facultyMember_id` INT NOT NULL,
  `field_know` VARCHAR(45) NOT NULL,
  `employee_id` INT NOT NULL,
  PRIMARY KEY (`facultyMember_id`, `employee_id`),
  INDEX `employee_id_idx` (`employee_id` ASC),
  CONSTRAINT `FKemployee_id3`
    FOREIGN KEY (`employee_id`)
    REFERENCES `CollegeDepartmentDB`.`Employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Teacher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Teacher` (
  `teacher_id` INT NOT NULL,
  `facultyMember_id` INT NOT NULL,
  PRIMARY KEY (`teacher_id`, `facultyMember_id`),
  INDEX `facultyMember_id_idx` (`facultyMember_id` ASC),
  CONSTRAINT `FKfacultyMember_id2`
    FOREIGN KEY (`facultyMember_id`)
    REFERENCES `CollegeDepartmentDB`.`FacultyMember` (`facultyMember_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Researcher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Researcher` (
  `researcher_id` INT NOT NULL,
  `facultyMember_id` INT NOT NULL,
  PRIMARY KEY (`researcher_id`, `facultyMember_id`),
  INDEX `facultyMember_id_idx` (`facultyMember_id` ASC),
  CONSTRAINT `facultyMember_id`
    FOREIGN KEY (`facultyMember_id`)
    REFERENCES `CollegeDepartmentDB`.`FacultyMember` (`facultyMember_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Professor` (
  `professor_id` INT NOT NULL,
  `teacher_id` INT NOT NULL,
  PRIMARY KEY (`professor_id`, `teacher_id`),
  INDEX `teacher_id_idx` (`teacher_id` ASC),
  CONSTRAINT `FKteacher_id2`
    FOREIGN KEY (`teacher_id`)
    REFERENCES `CollegeDepartmentDB`.`Teacher` (`teacher_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Lecturer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Lecturer` (
  `lecturer_id` INT NOT NULL,
  `teacher_id` INT NOT NULL,
  `work` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`lecturer_id`, `teacher_id`),
  INDEX `teacher_id_idx` (`teacher_id` ASC),
  CONSTRAINT `FKteacher_id1`
    FOREIGN KEY (`teacher_id`)
    REFERENCES `CollegeDepartmentDB`.`Teacher` (`teacher_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Association`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Association` (
  `association` INT NOT NULL,
  `employee_id` INT NOT NULL,
  PRIMARY KEY (`association`, `employee_id`),
  INDEX `employee_id_idx` (`employee_id` ASC),
  CONSTRAINT `FKemployee_id2`
    FOREIGN KEY (`employee_id`)
    REFERENCES `CollegeDepartmentDB`.`Employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Administration`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Administration` (
  `administration_id` INT NOT NULL,
  `employee_id` INT NOT NULL,
  PRIMARY KEY (`administration_id`, `employee_id`),
  INDEX `employee_id_idx` (`employee_id` ASC),
  CONSTRAINT `FKemployee_id1`
    FOREIGN KEY (`employee_id`)
    REFERENCES `CollegeDepartmentDB`.`Employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`PaperResearch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`PaperResearch` (
  `paperResearch_id` INT NOT NULL,
  `size` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `date_publication` DATETIME NOT NULL,
  PRIMARY KEY (`paperResearch_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`pubish`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`pubish` (
  `Researcher_researcher_id` INT NOT NULL,
  `Researcher_facultyMember_id` INT NOT NULL,
  `PaperResearch_paperResearch_id` INT NOT NULL,
  INDEX `fk_Researcher_has_PaperResearch_PaperResearch1_idx` (`PaperResearch_paperResearch_id` ASC),
  INDEX `fk_Researcher_has_PaperResearch_Researcher1_idx` (`Researcher_researcher_id` ASC, `Researcher_facultyMember_id` ASC),
  CONSTRAINT `fk_Researcher_has_PaperResearch_Researcher1`
    FOREIGN KEY (`Researcher_researcher_id` , `Researcher_facultyMember_id`)
    REFERENCES `CollegeDepartmentDB`.`Researcher` (`researcher_id` , `facultyMember_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Researcher_has_PaperResearch_PaperResearch1`
    FOREIGN KEY (`PaperResearch_paperResearch_id`)
    REFERENCES `CollegeDepartmentDB`.`PaperResearch` (`paperResearch_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Course` (
  `course_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`course_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Section`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Section` (
  `section_id` INT NOT NULL,
  `Teacher_teacher_id` INT NULL,
  `Teacher_facultyMember_id` INT NULL,
  `size` INT NULL,
  `number` INT NOT NULL,
  `located` INT NULL,
  PRIMARY KEY (`section_id`),
  INDEX `fk_Section_Teacher1_idx` (`Teacher_teacher_id` ASC, `Teacher_facultyMember_id` ASC),
  CONSTRAINT `fk_Section_Teacher1`
    FOREIGN KEY (`Teacher_teacher_id` , `Teacher_facultyMember_id`)
    REFERENCES `CollegeDepartmentDB`.`Teacher` (`teacher_id` , `facultyMember_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Intern`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Intern` (
  `intern_id` INT NOT NULL,
  `name_position` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`intern_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Learner`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Learner` (
  `learner_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `gpa` FLOAT NULL,
  `school_year` INT NOT NULL,
  `major` VARCHAR(45) NOT NULL,
  `Intern_intern_id` INT NULL,
  `year` INT NOT NULL,
  `minor` VARCHAR(45) NULL,
  PRIMARY KEY (`learner_id`),
  INDEX `fk_Learner_Intern1_idx` (`Intern_intern_id` ASC),
  CONSTRAINT `fk_Learner_Intern1`
    FOREIGN KEY (`Intern_intern_id`)
    REFERENCES `CollegeDepartmentDB`.`Intern` (`intern_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`InternationalStudent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`InternationalStudent` (
  `internationalStudent_id` INT NOT NULL,
  `learner_id` INT NOT NULL,
  `school` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`internationalStudent_id`, `learner_id`),
  INDEX `learner_id_idx` (`learner_id` ASC),
  CONSTRAINT `FKlearner_id2`
    FOREIGN KEY (`learner_id`)
    REFERENCES `CollegeDepartmentDB`.`Learner` (`learner_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Student` (
  `student_id` INT NOT NULL,
  `learner_id` INT NOT NULL,
  PRIMARY KEY (`student_id`, `learner_id`),
  INDEX `learner_id_idx` (`learner_id` ASC),
  CONSTRAINT `FKlearner_id1`
    FOREIGN KEY (`learner_id`)
    REFERENCES `CollegeDepartmentDB`.`Learner` (`learner_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Grader`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Grader` (
  `grader_id` INT NOT NULL,
  `Student_student_id` INT NOT NULL,
  PRIMARY KEY (`grader_id`),
  INDEX `fk_Grader_Student1_idx` (`Student_student_id` ASC),
  CONSTRAINT `fk_Grader_Student1`
    FOREIGN KEY (`Student_student_id`)
    REFERENCES `CollegeDepartmentDB`.`Student` (`student_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Prerequisite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Prerequisite` (
  `prerequisite_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`prerequisite_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Class`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Class` (
  `class_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `size` INT NOT NULL,
  PRIMARY KEY (`class_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Activity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Activity` (
  `activity` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `date` DATETIME NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `price` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`activity`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`participate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`participate` (
  `Learner_learner_id` INT NOT NULL,
  `Activity_activity` INT NOT NULL,
  INDEX `fk_Learner_has_Activity_Activity1_idx` (`Activity_activity` ASC),
  INDEX `fk_Learner_has_Activity_Learner1_idx` (`Learner_learner_id` ASC),
  CONSTRAINT `fk_Learner_has_Activity_Learner1`
    FOREIGN KEY (`Learner_learner_id`)
    REFERENCES `CollegeDepartmentDB`.`Learner` (`learner_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Learner_has_Activity_Activity1`
    FOREIGN KEY (`Activity_activity`)
    REFERENCES `CollegeDepartmentDB`.`Activity` (`activity`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Assignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Assignment` (
  `assignment_id` INT NOT NULL,
  `number` INT NOT NULL,
  `grade` INT NULL,
  `student` INT NOT NULL,
  PRIMARY KEY (`assignment_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Learner_has_Assignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Learner_has_Assignment` (
  `Learner_learner_id` INT NOT NULL,
  `Assignment_assignment_id` INT NOT NULL,
  INDEX `fk_Learner_has_Assignment_Assignment1_idx` (`Assignment_assignment_id` ASC),
  INDEX `fk_Learner_has_Assignment_Learner1_idx` (`Learner_learner_id` ASC),
  CONSTRAINT `fk_Learner_has_Assignment_Learner1`
    FOREIGN KEY (`Learner_learner_id`)
    REFERENCES `CollegeDepartmentDB`.`Learner` (`learner_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Learner_has_Assignment_Assignment1`
    FOREIGN KEY (`Assignment_assignment_id`)
    REFERENCES `CollegeDepartmentDB`.`Assignment` (`assignment_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Teacher_creates_Assignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Teacher_creates_Assignment` (
  `Teacher_teacher_id` INT NOT NULL,
  `Teacher_facultyMember_id` INT NOT NULL,
  `Assignment_assignment_id` INT NOT NULL,
  INDEX `fk_Teacher_has_Assignment_Assignment1_idx` (`Assignment_assignment_id` ASC),
  INDEX `fk_Teacher_has_Assignment_Teacher1_idx` (`Teacher_teacher_id` ASC, `Teacher_facultyMember_id` ASC),
  CONSTRAINT `fk_Teacher_has_Assignment_Teacher1`
    FOREIGN KEY (`Teacher_teacher_id` , `Teacher_facultyMember_id`)
    REFERENCES `CollegeDepartmentDB`.`Teacher` (`teacher_id` , `facultyMember_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Teacher_has_Assignment_Assignment1`
    FOREIGN KEY (`Assignment_assignment_id`)
    REFERENCES `CollegeDepartmentDB`.`Assignment` (`assignment_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Knowledge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Knowledge` (
  `knowledge_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`knowledge_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Course_has_Assignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Course_has_Assignment` (
  `Course_course_id` INT NOT NULL,
  `Assignment_assignment_id` INT NOT NULL,
  INDEX `fk_Course_has_Assignment_Assignment1_idx` (`Assignment_assignment_id` ASC),
  INDEX `fk_Course_has_Assignment_Course1_idx` (`Course_course_id` ASC),
  CONSTRAINT `fk_Course_has_Assignment_Course1`
    FOREIGN KEY (`Course_course_id`)
    REFERENCES `CollegeDepartmentDB`.`Course` (`course_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Course_has_Assignment_Assignment1`
    FOREIGN KEY (`Assignment_assignment_id`)
    REFERENCES `CollegeDepartmentDB`.`Assignment` (`assignment_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Learner_has_Course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Learner_has_Course` (
  `Learner_learner_id` INT NOT NULL,
  `Course_course_id` INT NOT NULL,
  `section` INT NOT NULL,
  INDEX `fk_Learner_has_Course_Course1_idx` (`Course_course_id` ASC),
  INDEX `fk_Learner_has_Course_Learner1_idx` (`Learner_learner_id` ASC),
  CONSTRAINT `fk_Learner_has_Course_Learner1`
    FOREIGN KEY (`Learner_learner_id`)
    REFERENCES `CollegeDepartmentDB`.`Learner` (`learner_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Learner_has_Course_Course1`
    FOREIGN KEY (`Course_course_id`)
    REFERENCES `CollegeDepartmentDB`.`Course` (`course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Course_has_Section`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Course_has_Section` (
  `Course_course_id` INT NOT NULL,
  `Section_section_id` INT NOT NULL,
  INDEX `fk_Course_has_Section_Section1_idx` (`Section_section_id` ASC),
  INDEX `fk_Course_has_Section_Course1_idx` (`Course_course_id` ASC),
  CONSTRAINT `fk_Course_has_Section_Course1`
    FOREIGN KEY (`Course_course_id`)
    REFERENCES `CollegeDepartmentDB`.`Course` (`course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Course_has_Section_Section1`
    FOREIGN KEY (`Section_section_id`)
    REFERENCES `CollegeDepartmentDB`.`Section` (`section_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Grades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Grades` (
  `Grader_grader_id` INT NOT NULL,
  `Assignment_assignment_id` INT NOT NULL,
  INDEX `fk_Grader_has_Assignment_Assignment1_idx` (`Assignment_assignment_id` ASC),
  INDEX `fk_Grader_has_Assignment_Grader1_idx` (`Grader_grader_id` ASC),
  CONSTRAINT `fk_Grader_has_Assignment_Grader1`
    FOREIGN KEY (`Grader_grader_id`)
    REFERENCES `CollegeDepartmentDB`.`Grader` (`grader_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Grader_has_Assignment_Assignment1`
    FOREIGN KEY (`Assignment_assignment_id`)
    REFERENCES `CollegeDepartmentDB`.`Assignment` (`assignment_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Located`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Located` (
  `Section_section_id` INT NOT NULL,
  `Facility_facility_id` INT NOT NULL,
  INDEX `fk_Section_has_Facility_Facility1_idx` (`Facility_facility_id` ASC),
  INDEX `fk_Section_has_Facility_Section1_idx` (`Section_section_id` ASC),
  CONSTRAINT `fk_Section_has_Facility_Section1`
    FOREIGN KEY (`Section_section_id`)
    REFERENCES `CollegeDepartmentDB`.`Section` (`section_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Section_has_Facility_Facility1`
    FOREIGN KEY (`Facility_facility_id`)
    REFERENCES `CollegeDepartmentDB`.`Class` (`class_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Course_has_Prerequisite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Course_has_Prerequisite` (
  `Prerequisite_prerequisite_id` INT NOT NULL,
  `Course_course_id` INT NOT NULL,
  INDEX `fk_Prerequisite_has_Course_Course1_idx` (`Course_course_id` ASC),
  INDEX `fk_Prerequisite_has_Course_Prerequisite1_idx` (`Prerequisite_prerequisite_id` ASC),
  CONSTRAINT `fk_Prerequisite_has_Course_Prerequisite1`
    FOREIGN KEY (`Prerequisite_prerequisite_id`)
    REFERENCES `CollegeDepartmentDB`.`Prerequisite` (`prerequisite_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Prerequisite_has_Course_Course1`
    FOREIGN KEY (`Course_course_id`)
    REFERENCES `CollegeDepartmentDB`.`Course` (`course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`InternationalStudent_has_Knowledge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`InternationalStudent_has_Knowledge` (
  `InternationalStudent_internationalStudent_id` INT NOT NULL,
  `InternationalStudent_learner_id` INT NULL,
  `Knowledge_knowledge_id` INT NOT NULL,
  INDEX `fk_InternationalStudent_has_Knowledge_Knowledge1_idx` (`Knowledge_knowledge_id` ASC),
  INDEX `fk_InternationalStudent_has_Knowledge_InternationalStudent1_idx` (`InternationalStudent_internationalStudent_id` ASC, `InternationalStudent_learner_id` ASC),
  CONSTRAINT `fk_InternationalStudent_has_Knowledge_InternationalStudent1`
    FOREIGN KEY (`InternationalStudent_internationalStudent_id` , `InternationalStudent_learner_id`)
    REFERENCES `CollegeDepartmentDB`.`InternationalStudent` (`internationalStudent_id` , `learner_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_InternationalStudent_has_Knowledge_Knowledge1`
    FOREIGN KEY (`Knowledge_knowledge_id`)
    REFERENCES `CollegeDepartmentDB`.`Knowledge` (`knowledge_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Prerequisite_need_Knowledge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Prerequisite_need_Knowledge` (
  `Prerequisite_prerequisite_id` INT NOT NULL,
  `Knowledge_knowledge_id` INT NOT NULL,
  INDEX `fk_Prerequisite_has_Knowledge_Knowledge1_idx` (`Knowledge_knowledge_id` ASC),
  INDEX `fk_Prerequisite_has_Knowledge_Prerequisite1_idx` (`Prerequisite_prerequisite_id` ASC),
  CONSTRAINT `fk_Prerequisite_has_Knowledge_Prerequisite1`
    FOREIGN KEY (`Prerequisite_prerequisite_id`)
    REFERENCES `CollegeDepartmentDB`.`Prerequisite` (`prerequisite_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Prerequisite_has_Knowledge_Knowledge1`
    FOREIGN KEY (`Knowledge_knowledge_id`)
    REFERENCES `CollegeDepartmentDB`.`Knowledge` (`knowledge_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CollegeDepartmentDB`.`Student_has_Prerequisite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CollegeDepartmentDB`.`Student_has_Prerequisite` (
  `Student_student_id` INT NOT NULL,
  `Student_learner_id` INT NULL,
  `Prerequisite_prerequisite_id` INT NOT NULL,
  INDEX `fk_Student_has_Prerequisite_Prerequisite1_idx` (`Prerequisite_prerequisite_id` ASC),
  INDEX `fk_Student_has_Prerequisite_Student1_idx` (`Student_student_id` ASC, `Student_learner_id` ASC),
  CONSTRAINT `fk_Student_has_Prerequisite_Student1`
    FOREIGN KEY (`Student_student_id` , `Student_learner_id`)
    REFERENCES `CollegeDepartmentDB`.`Student` (`student_id` , `learner_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Student_has_Prerequisite_Prerequisite1`
    FOREIGN KEY (`Prerequisite_prerequisite_id`)
    REFERENCES `CollegeDepartmentDB`.`Prerequisite` (`prerequisite_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
